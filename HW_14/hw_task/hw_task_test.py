# üìå –ù–∞ —Å–µ–º–∏–Ω–∞—Ä–µ 13 –±—ã–ª —Å–æ–∑–¥–∞–Ω –ø—Ä–æ–µ–∫—Ç –ø–æ —Ä–∞–±–æ—Ç–µ —Å
# –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–∏–º—è, id, —É—Ä–æ–≤–µ–Ω—å).
# üìå –ù–∞–ø–∏—à–∏—Ç–µ 3-7 —Ç–µ—Å—Ç–æ–≤ pytest –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.
# üìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∏–∫—Å—Ç—É—Ä—ã.

import pytest

from sem_13_05 import Project
from sem_13_03 import AccessException, LevelException
from sem_13_04 import User


# —Ñ–∏–∫—Å—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
@pytest.fixture
def project():
    filename = "HW_14\\hw_task\\users.json"
    return Project.load(filename)

# —Ñ–∏–∫—Å—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç + user
@pytest.fixture
def user(project):
    u_1 = User("54321", "var")
    return project, u_1

# —Ñ–∏–∫—Å—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç + admin
@pytest.fixture
def project_admin(project):
    project.login("54321", "var")
    return project


# —Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ Project
def test_create(project):
    assert isinstance(project, Project), 'type mismatch'

# –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
def test_login(user):
    project, u_1 = user
    assert u_1 in project.users, 'User missin'
    project.login("54321", "var")
    assert project.admin == u_1, 'User did not admin'

# –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–∫–∏ "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Å—Ç—É—Å—Ç–≤—É–µ—Ç"
def test_login_missin(project):
    with pytest.raises(AccessException):
        project.login('7', 'temp')


# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –ø—Ä–æ–µ–∫—Ç–µ
def test_not_add_user(project):
    with pytest.raises(AttributeError):
        project.add_user('7', 'temp', 2)

# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def test_add_user(project_admin):
    u_1 = User('010', '–ú—É—Å—Ç–∞—Ñ–∞', '7')
    assert u_1 not in project_admin.users
    project_admin.add_user('010', '–ú—É—Å—Ç–∞—Ñ–∞', "5")
    assert u_1 in project_admin.users

# —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞
def test_del_user(project_admin):
    u_1 = User('010', '–ú—É—Å—Ç–∞—Ñ–∞', '7')
    project_admin.add_user('010', '–ú—É—Å—Ç–∞—Ñ–∞', "5")
    assert u_1 in project_admin.users
    project_admin.del_user(u_1)
    assert u_1 not in project_admin.users, 'User did not delete'

if __name__ == '__main__':
    pytest.main(['-v'])