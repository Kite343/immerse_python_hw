# üìå –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å –ú–æ—è –°—Ç—Ä–æ–∫–∞, –≥–¥–µ:
# üìå –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ str
# üìå –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Ö—Ä–∞–Ω—è—Ç—Å—è –∏–º—è –∞–≤—Ç–æ—Ä–∞ —Å—Ç—Ä–æ–∫–∏ –∏ –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è
# (time.time)

# task_3
# –î–æ–±–∞–≤—å—Ç–µ –∫ –∑–∞–¥–∞—á–∞–º 1 –∏ 2 —Å—Ç—Ä–æ–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –¥–ª—è –∫–ª–∞—Å—Å–æ–≤.

import time


class My_Str(str):
    """
    –°—Ç—Ä–æ–∫–∞ –∏–º–µ—é—â–∞—è –∞–≤—Ç–æ—Ä–∞ –∏ –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è,
    –û–±–ª–∞–¥–∞–µ—Ç –≤—Å–µ–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ —Å—Ç—Ä–æ–∫
    A string that has an author and creation time,
    Has all the properties of strings
    """

    def __new__(cls, string, *args, **kwargs):
        instance = super().__new__(cls, string)
        return instance
    
    def __init__(self, string, name):
        self.string = string
        self.name = name
        self.time = time.time()
    
    def __str__(self):
        return f"{self.string}"
        # return f"Instance of the class {self.__class__.__name__}, name = {self.name}, time = {self.time}, streeng = {self.string}"
        # return f"Instance of the class My_Str, name = {self.name}, time = {self.time}, streeng = {self.string}"
    
    def __repr__(self):
        return f"{type(self).__name__}({self.string}, {self.name})"
        # return f"My_Str({self.string}, {self.name})"

if __name__ == '__main__':
    str_1 = My_Str("test_1", "name_1")
    print(str_1)
    print(str_1.upper())
    time.sleep(1)
    str_2 = My_Str("test_2", "name_2")
    print(str_2)
    print(str_2.upper())
    print(str_1.lower())
    print(str_1.name, str_2.name)
    print(str_2.time - str_1.time)
    # help(My_Str)
    print(repr(str_1))
