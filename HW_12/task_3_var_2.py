# üìå –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä.
# üìå –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–µ–Ω –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ –≤
# –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç start –¥–æ stop —Å —à–∞–≥–æ–º step.
# üìå –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, —Å—á–∏—Ç–∞–µ–º step=1.
# üìå –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä, —Ç–∞–∫–∂–µ —Å—á–∏—Ç–∞–µ–º start=1.

from task_2 import Factorial

class Gen_factorial():
    def __init__(self, start, stop = None, step = 1):
        if stop is None:
            start, stop = 1, start
        self.start = start
        self.stop = stop
        self.step = step
        self.f = Factorial((self.stop - self.start + 2) // self.step)
        self.__first = start

    def __iter__(self):
        return self
    
    def __next__(self):
        while self.__first <= self.stop:
            res = self.f(self.__first)
            self.__first += self.step
            return res
        self.__first = self.start # –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–Ω–æ–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
        raise StopIteration
    
if __name__ == "__main__":
    gen_f = Gen_factorial(1, 11, 2)
    for i in gen_f:
        print(i)

    for i in gen_f:
        print(i)

    print(gen_f.f.history)
    gen_f.f.print_results()
    


    