# ✔ В большой текстовой строке подсчитать количество встречаемых
# слов и вернуть 10 самых частых. Не учитывать знаки препинания
# и регистр символов. За основу возьмите любую статью
# из википедии или из документации к языку.

text = "Банановый эквивалент — понятие, применяемое сторонниками ядерной энергетики\
      для характеристики активности радиоактивного источника путём сравнения с активностью калия-40,\
      содержащегося среди других изотопов калия в обычном банане. \
        Многие пищевые продукты от природы радиоактивны из-за содержащегося в них калия-40. \
        В грамме природного калия происходит в среднем 32 распада калия-40 в секунду (32 беккереля, или 865 пикокюри).\
         Банановый эквивалент определяется как активность вещества, вводимого в организм при съедании одного банана."

text = "".join([el for el in text.lower() if el.isalpha() or el == " "])
text = text.split()

# var1
print(*sorted(set(text), key=text.count, reverse=True)[:10], sep='\n')

print()
# var 2
n = 10
dict_text = dict()
for el in text:
    dict_text[el] = dict_text.get(el, 0) + 1

# сохраниться порядок встречи слов в тексте при равном количестве этих слов
# sort_word = sorted(dict_text.items(), key=lambda item: item[1], reverse=True)[:n]
# for word, count in sort_word:
#     print(f"Слово {word} встречается {count} раз")

# сортировка по количеству и по алфавиту
sort_word = sorted(dict_text.items(), key=lambda x: (-x[1], x[0]))[:n]
for word, count in sort_word:
    print(f"Слово {word} встречается {count} раз")