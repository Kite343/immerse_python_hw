# üìå –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ–¥—É–ª—å logging –¥–ª—è
# –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –≤ —Ñ–∞–π–ª.
# üìå –ù–∞–ø—Ä–∏–º–µ—Ä –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å.

import logging

FORMAT = '{levelname:<8} - {asctime}. –í –º–æ–¥—É–ª–µ "{name}" ' \
    '–≤ —Å—Ç—Ä–æ–∫–µ {lineno:03d} —Ñ—É–Ω–∫—Ü–∏—è "{funcName}()" ' \
        '–≤ {created} —Å–µ–∫—É–Ω–¥ –∑–∞–ø–∏—Å–∞–ª–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ: {msg}'
logging.basicConfig(format=FORMAT, style='{', filename='task_1_log.log.', filemode='a', encoding='utf-8', level=logging.INFO)
logger = logging.getLogger(__name__)

def division(a, b):
    try:
        return a / b
    except ZeroDivisionError as e:
        # logger.error("division by 0")
        logger.error(e)
    

if __name__ == "__main__":
    print(division(3, 2))
    print(division(3, 0))