# üìå –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Ç–µ–∫—Å—Ç –≤–∏–¥–∞: ‚Äú1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è‚Äù, ‚Äú3-
# —è —Å—Ä–µ–¥–∞ –º–∞—è‚Äù –∏ —Ç.–ø.
# üìå –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –µ–≥–æ –≤ –¥–∞—Ç—É –≤ —Ç–µ–∫—É—â–µ–º –≥–æ–¥—É.
# üìå –õ–æ–≥–∏—Ä—É–π—Ç–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.

from datetime import datetime, timedelta, date
import logging

logging.basicConfig(filename='task_4.log', encoding='utf-8', level=logging.INFO)
logger = logging.getLogger(__name__)


def convert_to_date(text: str) -> date:
    months = {'—è–Ω–≤–∞—Ä—è': 1, '—Ñ–µ–≤—Ä–∞–ª—è': 2, "–º–∞—Ä—Ç–∞": 3, 
              "–∞–ø—Ä–µ–ª—è": 4, "–º–∞—è": 5, "–∏—é–Ω—è": 6,
              "–∏—é–ª—è": 7, "–∞–≤–≥—É—Å—Ç–∞": 8, "—Å–µ–Ω—Ç—è–±—Ä—è": 9, "–æ–∫—Ç—è–±—Ä—è": 10, "–Ω–æ—è–±—Ä—è": 11, "–¥–µ–∫–∞–±—Ä—è": 12}
    days = {"–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫": 0, "–≤—Ç–æ—Ä–Ω–∏–∫": 1, "—Å—Ä–µ–¥–∞": 2, "—á–µ—Ç–≤–µ—Ä–≥": 3, 
            "–ø—è—Ç–Ω–∏—Ü–∞": 4, "—Å—É–±–±–æ—Ç–∞": 5, "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ": 6}
    text = text.split()
    if len(text) != 3:
        logger.critical('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞!!!')
        raise ValueError
    num_day_of_week, day_of_week, month = text
    num_day_of_week = num_day_of_week[:-2]
    if not num_day_of_week.isdecimal():
        logger.critical('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞ (–Ω–µ —Ü–∏—Ñ—Ä–∞)!!!')
        raise ValueError
    num_day_of_week = int(num_day_of_week)
    # print(f'{num_day_of_week = }')

    if day_of_week not in days:
        logger.critical('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞!!!')
        raise ValueError
    day_of_week = days[day_of_week]
    # print(f'{day_of_week = }')

    if month not in months:
        logger.critical('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞!!!')
        raise ValueError
    month = months[month]
    # print(f'{month = }')

    original_date = date(year=datetime.now().year, month=month, day=1)
    # print(original_date)
    prev_day = 0
    num_week = 0
    delta = timedelta(days=1)


    while prev_day < original_date.day:
        if original_date.weekday() == day_of_week:
            num_week += 1
        if num_week == num_day_of_week:
            return original_date
        prev_day = original_date.day
        original_date += delta
    logger.critical('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞!!!')
    raise ValueError


if __name__ == '__main__':
    text = '1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è'
    text = '3-—è —Å—Ä–µ–¥–∞ –º–∞—è'
    text = '3-–π —á–µ—Ç–≤–µ—Ä–≥ –∏—é–ª—è'
    text = '1-–π –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –∏—é–ª—è'
    text = '—á–µ—Ç–≤–µ—Ä–≥ –∏—é–ª—è'
    print(convert_to_date(text))

